/*
 * LIO - Order Management API
 * API de gerenciamento de pedidos da LIO.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.OrdersItems;
import io.swagger.client.model.OrdersTransactions;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Body
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-28T14:20:55.281Z")
public class Body {
  @SerializedName("id")
  private String id = null;

  @SerializedName("number")
  private String number = null;

  @SerializedName("reference")
  private String reference = null;

  /**
   * Status do pedido.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("DRAFT"),
    
    ENTERED("ENTERED"),
    
    CANCELED("CANCELED"),
    
    PAID("PAID"),
    
    APPROVED("APPROVED"),
    
    REJECTED("REJECTED"),
    
    RE_ENTERED("RE_ENTERED"),
    
    CLOSED("CLOSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("created_at")
  private DateTime createdAt = null;

  @SerializedName("updated_at")
  private DateTime updatedAt = null;

  @SerializedName("items")
  private List<OrdersItems> items = new ArrayList<OrdersItems>();

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("transactions")
  private List<OrdersTransactions> transactions = new ArrayList<OrdersTransactions>();

  @SerializedName("price")
  private Integer price = null;

  @SerializedName("remaining")
  private Integer remaining = null;

  public Body id(String id) {
    this.id = id;
    return this;
  }

   /**
   * UUID que identifica unicamente o pedido.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "UUID que identifica unicamente o pedido.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Body number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Número do pedido. Gerelmente esse número representa o identificador do pedido em um sistema externo através da integração com parceiros.
   * @return number
  **/
  @ApiModelProperty(value = "Número do pedido. Gerelmente esse número representa o identificador do pedido em um sistema externo através da integração com parceiros.")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Body reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Referência do pedido. Utilizada para facilitar o acesso ou localização do mesmo.
   * @return reference
  **/
  @ApiModelProperty(value = "Referência do pedido. Utilizada para facilitar o acesso ou localização do mesmo.")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public Body status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status do pedido.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Status do pedido.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Body createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Data de criação do pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "Data de criação do pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Body updatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Data de última atualização do pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "Data de última atualização do pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)")
  public DateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(DateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Body items(List<OrdersItems> items) {
    this.items = items;
    return this;
  }

  public Body addItemsItem(OrdersItems itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Lista de itens contidos no pedido.
   * @return items
  **/
  @ApiModelProperty(required = true, value = "Lista de itens contidos no pedido.")
  public List<OrdersItems> getItems() {
    return items;
  }

  public void setItems(List<OrdersItems> items) {
    this.items = items;
  }

  public Body notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Campo disponível para uso do Merchant para comunicação.
   * @return notes
  **/
  @ApiModelProperty(value = "Campo disponível para uso do Merchant para comunicação.")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public Body transactions(List<OrdersTransactions> transactions) {
    this.transactions = transactions;
    return this;
  }

  public Body addTransactionsItem(OrdersTransactions transactionsItem) {
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * Lista de transações de pagamento (ou outros tipos) efetuadas no pedido.
   * @return transactions
  **/
  @ApiModelProperty(required = true, value = "Lista de transações de pagamento (ou outros tipos) efetuadas no pedido.")
  public List<OrdersTransactions> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<OrdersTransactions> transactions) {
    this.transactions = transactions;
  }

  public Body price(Integer price) {
    this.price = price;
    return this;
  }

   /**
   * Valor total do pedido. Exemplo: O valor de R$ 10,00 é representado como 1000.
   * @return price
  **/
  @ApiModelProperty(required = true, value = "Valor total do pedido. Exemplo: O valor de R$ 10,00 é representado como 1000.")
  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }

  public Body remaining(Integer remaining) {
    this.remaining = remaining;
    return this;
  }

   /**
   * Valor restante do pagamento do pedido.Exemplo: O valor de R$ 10,00 é representado como 1000.
   * @return remaining
  **/
  @ApiModelProperty(required = true, value = "Valor restante do pagamento do pedido.Exemplo: O valor de R$ 10,00 é representado como 1000.")
  public Integer getRemaining() {
    return remaining;
  }

  public void setRemaining(Integer remaining) {
    this.remaining = remaining;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body body = (Body) o;
    return Objects.equals(this.id, body.id) &&
        Objects.equals(this.number, body.number) &&
        Objects.equals(this.reference, body.reference) &&
        Objects.equals(this.status, body.status) &&
        Objects.equals(this.createdAt, body.createdAt) &&
        Objects.equals(this.updatedAt, body.updatedAt) &&
        Objects.equals(this.items, body.items) &&
        Objects.equals(this.notes, body.notes) &&
        Objects.equals(this.transactions, body.transactions) &&
        Objects.equals(this.price, body.price) &&
        Objects.equals(this.remaining, body.remaining);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, number, reference, status, createdAt, updatedAt, items, notes, transactions, price, remaining);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    remaining: ").append(toIndentedString(remaining)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

